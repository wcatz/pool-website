function Processor() {
    return (
        <svg fill="none" stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="1.5" shapeRendering="geometricPrecision" viewBox="0 0 24 24" height="24" width="24" style={{ color: 'currentColor' }} ><rect width="16" height="16" x="4" y="4" rx="2" ry="2"></rect><path d="M9 9h6v6H9zM9 1v3M15 1v3M9 20v3M15 20v3M20 9h3M20 14h3M1 9h3M1 14h3"></path></svg>
    )
}

function Computer() {
    return (
        <svg fill="none" stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="1.5" shapeRendering="geometricPrecision" viewBox="0 0 24 24" height="24" width="24" style={{ color: 'currentColor' }} ><rect width="20" height="14" x="2" y="3" rx="2" ry="2"></rect><path d="M8 21h8M12 17v4"></path></svg>
    )
}

function Firewall() {

    return (
        <svg fill="none" stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="1.5" shapeRendering="geometricPrecision" viewBox="0 0 24 24" height="24" width="24" style={{ color: 'currentColor' }}><path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path></svg>
    )
}

function Storage() {

    return (
        <svg fill="none" stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="1.5" shapeRendering="geometricPrecision" viewBox="0 0 24 24" height="24" width="24" style={{ color: 'currentColor' }}><path d="M22 12H2M5.45 5.11L2 12v6a2 2 0 002 2h16a2 2 0 002-2v-6l-3.45-6.89A2 2 0 0016.76 4H7.24a2 2 0 00-1.79 1.11zM6 16h.01M10 16h.01"></path></svg>
    )
}

function Internet() {

    return (
        <svg fill="none" stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="1.5" shapeRendering="geometricPrecision" viewBox="0 0 24 24" height="24" width="24" style={{ color: 'currentColor' }}><path d="M5 12.55a11 11 0 0114.08 0M1.42 9a16 16 0 0121.16 0M8.53 16.11a6 6 0 016.95 0M12 20h.01"></path></svg>
    )
}

function Solar(props) {

    return (
        <svg height={28} viewBox="0 0 200 200" version="1.1" xmlns="http://www.w3.org/2000/svg">
            <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                <g transform="translate(3.000000, 29.000000)" fill="#000000" fillRule="nonzero">
                    <path d="M175.169025,27.4695354 C170.733289,18.2683271 159.677127,14.403873 150.473488,18.8377177 C141.269848,23.2715624 137.403436,34.3249525 141.837296,43.5270648 C146.271156,52.7291771 157.326529,56.5958847 166.531073,52.1639162 C175.727705,47.7212378 179.591899,36.67419 175.169025,27.4695354 L175.169025,27.4695354 Z M164.435451,47.815501 C157.631705,51.092553 149.45903,48.2348378 146.181199,41.4325903 C142.903368,34.6303428 145.761608,26.4593941 152.565283,23.1821938 C159.368958,19.9049934 167.541695,22.7625304 170.819675,29.5647065 C174.08841,36.367616 171.232425,44.5321151 164.435451,47.815501 Z" id="Shape"></path>
                    <path d="M147.278263,6.31512152 C146.738778,5.1593972 145.393767,4.67391837 144.274096,5.23077418 C143.154425,5.78762999 142.684091,7.17595049 143.223575,8.33167488 L145.714296,13.6678568 C146.059106,14.4226618 146.769693,14.9285302 147.57575,14.9930311 C148.381807,15.057532 149.159437,14.6707511 149.61283,13.9798185 C150.066224,13.2888859 150.12569,12.4000051 149.768609,11.6513034 L147.278263,6.31512152 Z" id="Path"></path>
                    <path d="M169.274804,55.2306763 C168.736536,55.4986084 168.323369,55.9764059 168.126197,56.5589586 C167.929024,57.1415113 167.963997,57.7810994 168.223422,58.3370206 L170.7167,63.6825698 C171.25682,64.840323 172.603415,65.3266541 173.724404,64.7688207 C174.845393,64.2109874 175.316281,62.8202297 174.776162,61.6624765 L172.282508,56.3169273 C172.023152,55.7609372 171.560555,55.3341349 170.996495,55.1304208 C170.432434,54.9267068 169.813119,54.96277 169.274804,55.2306763 L169.274804,55.2306763 Z" id="Path"></path>
                    <path d="M185.662988,19.2233184 L180.317432,21.7168717 C179.159677,22.2569697 178.673345,23.6035107 179.23118,24.7244551 C179.789014,25.8453996 181.179773,26.3162687 182.337528,25.7761707 L187.683084,23.2826174 C188.43202,22.9332352 188.931552,22.2235438 188.99351,21.420877 C189.055468,20.6182102 188.67044,19.8445122 187.983462,19.3912275 C187.296484,18.9379429 186.411924,18.8739363 185.662988,19.2233184 L185.662988,19.2233184 Z" id="Path"></path>
                    <path d="M131.325928,51 C131.674612,50.9993531 132.018644,50.9224458 132.33236,50.7750156 L137.667994,48.2848129 C138.422721,47.9400741 138.928538,47.2296356 138.993032,46.4237458 C139.057526,45.617856 138.670785,44.8403885 137.979923,44.3870893 C137.289062,43.9337902 136.400272,43.8743361 135.651647,44.2313433 L130.316013,46.7211711 C129.338808,47.1765058 128.81692,48.2262903 129.058695,49.250287 C129.30047,50.2742837 130.241552,51 131.325928,50.9985001 L131.325928,51 Z" id="Path"></path>
                    <path d="M166.93771,1.71534148 L164.11713,11.5961227 C163.870742,12.4591727 164.018992,13.4176603 164.506035,14.1105327 C164.993078,14.803405 165.744921,15.1253983 166.478351,14.9552207 C167.211782,14.7850431 167.815376,14.1485487 168.061763,13.2854988 L170.882343,3.40471751 C171.263226,2.07044017 170.688878,0.610615005 169.599502,0.144106708 C168.510125,-0.322401589 167.318245,0.38106417 166.937362,1.71534148 L166.93771,1.71534148 Z" id="Path"></path>
                    <path d="M147.937779,57.7145257 L145.117124,67.5958732 C144.870729,68.4590115 145.019016,69.4175832 145.506126,70.1105034 C145.993235,70.8034237 146.745165,71.1254215 147.478669,70.9552034 C148.212174,70.7849853 148.815816,70.1484115 149.062211,69.2852731 L151.882867,59.4039256 C152.129261,58.5408634 151.981008,57.5823622 151.493952,56.88948 C151.006896,56.1965978 150.255033,55.8746 149.521582,56.04478 C148.788131,56.21496 148.184522,56.8514635 147.938127,57.7145257 L147.937779,57.7145257 Z" id="Path"></path>
                    <path d="M178.143369,42.3991672 C177.919381,42.9223373 177.959093,43.4967365 178.253765,43.9959981 C178.548438,44.4952596 179.073934,44.8784845 179.714644,45.0613641 L189.59568,47.8823734 C190.929874,48.2632178 192.389546,47.6887827 192.855948,46.5993365 C193.322351,45.5098904 192.618867,44.3179843 191.284673,43.9371397 L181.403637,41.1171752 C180.069894,40.7374554 178.611417,41.310953 178.143369,42.3991672 Z" id="Path"></path>
                    <path d="M125.715249,25.0619921 L135.595835,27.8823985 C136.929968,28.2631616 138.389573,27.6888492 138.855955,26.5996359 C139.322336,25.5104225 138.618884,24.3187711 137.284751,23.9380079 L127.404165,21.1176015 C126.070032,20.7368384 124.610427,21.3111508 124.144045,22.4003641 C123.677664,23.4895775 124.381116,24.6812289 125.715249,25.0619921 L125.715249,25.0619921 Z" id="Path"></path>
                    <path d="M193.66034,111.454521 L149.83918,89.8161296 C149.263693,89.5319553 148.597138,89.4845433 147.986152,89.6843238 C147.375166,89.8841043 146.869798,90.314712 146.581226,90.8814165 L143.009735,97.8966135 C142.721155,98.4633137 142.673008,99.1196918 142.875886,99.7213494 C143.078764,100.323007 143.516048,100.820658 144.091539,101.104824 L164.423308,111.144177 L164.423308,138.220551 L129.784133,138.220551 L129.784133,113.540077 L148.418756,122.742817 C148.994243,123.026991 149.660798,123.074403 150.271784,122.874623 C150.882771,122.674842 151.388138,122.244234 151.67671,121.67753 L155.248201,114.663528 C155.536781,114.096828 155.584929,113.44045 155.38205,112.838792 C155.179172,112.237135 154.741888,111.739483 154.166397,111.455317 L110.345237,89.8161296 C109.769751,89.5319553 109.103195,89.4845433 108.492209,89.6843238 C107.881223,89.8841043 107.375855,90.314712 107.087283,90.8814165 L103.515792,97.8966135 C103.227212,98.4633137 103.179065,99.1196918 103.381943,99.7213494 C103.584821,100.323007 104.022105,100.820658 104.597597,101.104824 L124.929365,111.144177 L124.929365,138.220551 L83.906575,138.220551 L83.906575,99.6566874 L94.5288075,99.6566874 C95.5105053,99.6566421 96.3955291,99.0743203 96.7712558,98.1812169 C97.1469825,97.2881135 96.9394329,96.2600772 96.2453726,95.5764075 L83.8519588,83.3722196 L83.8519588,58.7299904 C83.8519588,57.409852 82.765182,56.3396683 81.4245748,56.3396683 L71.9881193,56.3396683 C70.6475121,56.3396683 69.5607353,57.409852 69.5607353,58.7299904 L69.5607353,69.2995965 L51.6887157,51.7000531 C50.7407763,50.766649 49.2039296,50.766649 48.2559901,51.7000531 L3.70054697,95.5752124 C3.00648664,96.258882 2.79893708,97.2869184 3.17466377,98.1800218 C3.55039046,99.0731251 4.43541427,99.6554469 5.41711205,99.6554922 L16.0393446,99.6554922 L16.0393446,138.219356 L2.42738404,138.219356 C1.08677685,138.219356 0,139.289539 0,140.609678 C0,141.929816 1.08677685,143 2.42738404,143 L182.640825,143 C183.981433,143 185.068209,141.929816 185.068209,140.609678 C185.068209,139.289539 183.981433,138.219356 182.640825,138.219356 L169.278076,138.219356 L169.278076,113.540077 L187.912699,122.742817 C188.488186,123.026991 189.154741,123.074403 189.765727,122.874623 C190.376714,122.674842 190.882081,122.244234 191.170653,121.67753 L194.742144,114.663528 C195.03098,114.096747 195.079267,113.440172 194.876374,112.838324 C194.673482,112.236476 194.236042,111.738685 193.66034,111.454521 Z M110.338764,95.1604915 L149.82057,114.655959 L148.425229,117.396861 L108.943423,97.9009958 L110.338764,95.1604915 Z M78.9959771,61.1199142 L78.9959771,65.8882084 L74.4155034,65.8882084 L74.4155034,61.1203126 L78.9959771,61.1199142 Z M74.4155034,70.669251 L78.9959771,70.669251 L78.9959771,78.5903802 L74.4155034,74.0802407 L74.4155034,70.669251 Z M18.4667286,94.874848 L11.2772217,94.874848 L49.9721507,56.7707231 L88.6674842,94.874848 L81.4791909,94.874848 C80.1385837,94.874848 79.0518069,95.9450317 79.0518069,97.2651701 L79.0518069,138.219356 L62.8838109,138.219356 L62.8838109,113.933683 C62.8838109,112.613545 61.7970341,111.543361 60.4564269,111.543361 L39.4886836,111.543361 C38.1480764,111.543361 37.0612995,112.613545 37.0612995,113.933683 L37.0612995,138.219356 L20.8941127,138.219356 L20.8941127,97.2651701 C20.8941127,95.9450317 19.8073358,94.874848 18.4667286,94.874848 L18.4667286,94.874848 Z M58.0290429,138.219356 L41.9160676,138.219356 L41.9160676,116.324005 L58.0290429,116.324005 L58.0290429,138.219356 Z M187.919981,117.39726 L148.438175,97.9013942 L149.833516,95.1608899 L189.315322,114.656357 L187.919981,117.39726 Z" id="Shape"></path>
                </g>
            </g>
        </svg>
    )
}

const specifications = [
    {
        icon: Processor,
        name: "1x Apple Mac Mini M1 16GB RAM, 2x Raspberry Pi 8GB RAM"
    },
    {
        icon: Computer,
        name: "Ubuntu 21.04"
    },
    {
        icon: Firewall,
        name: "Firewall UFW"
    },
    {
        icon: Storage,
        name: "Samsung NVMe, 256 GB"
    },
    {
        icon: Internet,
        name: "100 Mbps, 8 ms latency"
    },
    {
        icon: Solar,
        name: "Solar Powered"
    },
]

function SpecsSection() {

    return (
        <div className="py-12 bg-white dark:bg-gray-800">
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div className="text-center">
                    <h2 className="font-semibold tracking-wider text-green-900 dark:text-primary-600 uppercase">Single Pool Operator</h2>
                    <p className="mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-600 dark:text-gray-300 sm:text-4xl">
                        You know me, </p><p className="mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-600 dark:text-gray-300 sm:text-4xl">I'm down with OTG.
                    </p>
                    <div className="mt-10 flex justify-center">
                        <div className="bg-cover bg-center w-40 h-40 rounded-full shadow"
                            style={{ backgroundImage: `url(https://avatars.githubusercontent.com/u/3747031?v=4)` }} />
                    </div>
                    <p className="mt-2 text-2xl leading-8 font-extrabold tracking-tight text-gray-600 dark:text-gray-300 sm:text-3xl">
                        WCat
                    </p>
                    <p className="mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto">
                        I'm the operator of the Star Forge Pool. I enjoy helping others learn how to run cardano-node on efficient ARM64 devices.
                        You can learn how to run an active relay that uses 4 watts of power below.
                    </p>
                    <div className="my-4">
                    <a className="bg-transparent hover:bg-green-700 text-green-700 font-semibold hover:text-white py-2 px-4 border border-green-700 hover:border-transparent rounded"
                       href="https://docs.armada-alliance.com/learn/intermediate-guide/pi-pool-tutorial/pi-node">Image & Guide</a>
                    </div>
                    
                    <p className="mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto">
                        I have been operating a node since before Shelley with the goal of building an off the grid pool that would work with Starlink or some other type of next generation
                        sattelite internet.
                    </p>
                    <h2 className="mt-4 text-3xl leading-8 font-extrabold tracking-tight text-gray-600 dark:text-gray-300 sm:text-4xl">First Starlink Block</h2>
                    <p className="mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto">Huge thunderstorm took out power and both internet connections. Hooked up Starlink and my cores wireguard tunnel connected to a vps relay I have. Made a block through Starlinks gnat!</p>
                </div>

            </div>
        </div>
    )
}

export default SpecsSection